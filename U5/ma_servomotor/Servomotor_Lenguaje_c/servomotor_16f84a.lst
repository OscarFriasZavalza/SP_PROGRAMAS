CCS PCM C Compiler, Version 5.015, 5967               01-jun.-23 11:04

               Filename:   C:\SP_PROGRAMAS\U5\ma_servomotor\Servomotor_Lenguaje_c\servomotor_16f84a.lst

               ROM used:   232 words (3%)
                           Largest free fragment is 2048
               RAM used:   6 (2%) at main() level
                           7 (2%) worst case
               Stack used: 2 locations
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   0C9
0003:  NOP
.................... #include <16f877a.h> 
.................... //////////// Standard Header file for the PIC16F877A device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2013 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F877A 
....................  
.................... #list 
....................  
.................... #fuses HS,NOWDT,NOPROTECT,NOPUT,NOLVP,BROWNOUT 
.................... #use delay(clock=20M) 
*
0017:  MOVLW  22
0018:  MOVWF  04
0019:  BCF    03.7
001A:  MOVF   00,W
001B:  BTFSC  03.2
001C:  GOTO   02A
001D:  MOVLW  06
001E:  MOVWF  78
001F:  CLRF   77
0020:  DECFSZ 77,F
0021:  GOTO   020
0022:  DECFSZ 78,F
0023:  GOTO   01F
0024:  MOVLW  7B
0025:  MOVWF  77
0026:  DECFSZ 77,F
0027:  GOTO   026
0028:  DECFSZ 00,F
0029:  GOTO   01D
002A:  RETURN
.................... #use standard_io(B) 
.................... #use standard_io(A) 
....................  
.................... #define bobina_1 PIN_B0 
.................... #define bobina_2 PIN_B1 
.................... #define bobina_3 PIN_B2 
.................... #define bobina_4 PIN_B3 
....................  
.................... #define pulsador_izq PIN_A0 
.................... #define pulsador_der PIN_A1 
....................  
.................... void pasos_izquierda(int velocidad); 
.................... void pasos_derecha(int velocidad); 
.................... void pasos_off(void); 
....................  
.................... void main() 
*
00C9:  MOVF   03,W
00CA:  ANDLW  1F
00CB:  MOVWF  03
00CC:  BSF    03.5
00CD:  BSF    1F.0
00CE:  BSF    1F.1
00CF:  BSF    1F.2
00D0:  BCF    1F.3
00D1:  MOVLW  07
00D2:  MOVWF  1C
00D3:  BCF    03.7
.................... { 
....................    while(true) 
....................    { 
....................       pasos_off(); 
00D4:  BCF    03.5
00D5:  GOTO   004
....................        
....................       if(input(pulsador_izq) == 1) 
00D6:  BSF    03.5
00D7:  BSF    05.0
00D8:  BCF    03.5
00D9:  BTFSS  05.0
00DA:  GOTO   0DE
....................       { 
....................          pasos_izquierda(80); 
00DB:  MOVLW  50
00DC:  MOVWF  21
00DD:  GOTO   02B
....................       } 
....................        
....................       if(input(pulsador_der) == 1) 
00DE:  BSF    03.5
00DF:  BSF    05.1
00E0:  BCF    03.5
00E1:  BTFSS  05.1
00E2:  GOTO   0E6
....................       { 
....................          pasos_derecha(80); 
00E3:  MOVLW  50
00E4:  MOVWF  21
00E5:  GOTO   07A
....................       } 
00E6:  GOTO   0D5
....................    } 
.................... } 
....................  
00E7:  SLEEP
.................... void pasos_izquierda(int velocidad) 
.................... { 
....................    output_low(bobina_1); 
*
002B:  BSF    03.5
002C:  BCF    06.0
002D:  BCF    03.5
002E:  BCF    06.0
....................    output_low(bobina_2); 
002F:  BSF    03.5
0030:  BCF    06.1
0031:  BCF    03.5
0032:  BCF    06.1
....................    output_high(bobina_3); 
0033:  BSF    03.5
0034:  BCF    06.2
0035:  BCF    03.5
0036:  BSF    06.2
....................    output_high(bobina_4); 
0037:  BSF    03.5
0038:  BCF    06.3
0039:  BCF    03.5
003A:  BSF    06.3
....................    delay_ms(velocidad); 
003B:  MOVF   21,W
003C:  MOVWF  22
003D:  CALL   017
....................     
....................    output_low(bobina_1); 
003E:  BSF    03.5
003F:  BCF    06.0
0040:  BCF    03.5
0041:  BCF    06.0
....................    output_high(bobina_2); 
0042:  BSF    03.5
0043:  BCF    06.1
0044:  BCF    03.5
0045:  BSF    06.1
....................    output_high(bobina_3); 
0046:  BSF    03.5
0047:  BCF    06.2
0048:  BCF    03.5
0049:  BSF    06.2
....................    output_low(bobina_4); 
004A:  BSF    03.5
004B:  BCF    06.3
004C:  BCF    03.5
004D:  BCF    06.3
....................    delay_ms(velocidad); 
004E:  MOVF   21,W
004F:  MOVWF  22
0050:  CALL   017
....................     
....................    output_high(bobina_1); 
0051:  BSF    03.5
0052:  BCF    06.0
0053:  BCF    03.5
0054:  BSF    06.0
....................    output_high(bobina_2); 
0055:  BSF    03.5
0056:  BCF    06.1
0057:  BCF    03.5
0058:  BSF    06.1
....................    output_low(bobina_3); 
0059:  BSF    03.5
005A:  BCF    06.2
005B:  BCF    03.5
005C:  BCF    06.2
....................    output_low(bobina_4); 
005D:  BSF    03.5
005E:  BCF    06.3
005F:  BCF    03.5
0060:  BCF    06.3
....................    delay_ms(velocidad); 
0061:  MOVF   21,W
0062:  MOVWF  22
0063:  CALL   017
....................     
....................    output_high(bobina_1); 
0064:  BSF    03.5
0065:  BCF    06.0
0066:  BCF    03.5
0067:  BSF    06.0
....................    output_low(bobina_2); 
0068:  BSF    03.5
0069:  BCF    06.1
006A:  BCF    03.5
006B:  BCF    06.1
....................    output_low(bobina_3); 
006C:  BSF    03.5
006D:  BCF    06.2
006E:  BCF    03.5
006F:  BCF    06.2
....................    output_high(bobina_4); 
0070:  BSF    03.5
0071:  BCF    06.3
0072:  BCF    03.5
0073:  BSF    06.3
....................    delay_ms(velocidad); 
0074:  MOVF   21,W
0075:  MOVWF  22
0076:  CALL   017
0077:  BCF    0A.3
0078:  BCF    0A.4
0079:  GOTO   0DE (RETURN)
.................... } 
....................  
.................... void pasos_derecha(int velocidad) 
.................... { 
....................    output_high(bobina_1); 
007A:  BSF    03.5
007B:  BCF    06.0
007C:  BCF    03.5
007D:  BSF    06.0
....................    output_high(bobina_2); 
007E:  BSF    03.5
007F:  BCF    06.1
0080:  BCF    03.5
0081:  BSF    06.1
....................    output_low(bobina_3); 
0082:  BSF    03.5
0083:  BCF    06.2
0084:  BCF    03.5
0085:  BCF    06.2
....................    output_low(bobina_4); 
0086:  BSF    03.5
0087:  BCF    06.3
0088:  BCF    03.5
0089:  BCF    06.3
....................    delay_ms(velocidad); 
008A:  MOVF   21,W
008B:  MOVWF  22
008C:  CALL   017
....................     
....................    output_low(bobina_1); 
008D:  BSF    03.5
008E:  BCF    06.0
008F:  BCF    03.5
0090:  BCF    06.0
....................    output_high(bobina_2); 
0091:  BSF    03.5
0092:  BCF    06.1
0093:  BCF    03.5
0094:  BSF    06.1
....................    output_high(bobina_3); 
0095:  BSF    03.5
0096:  BCF    06.2
0097:  BCF    03.5
0098:  BSF    06.2
....................    output_low(bobina_4); 
0099:  BSF    03.5
009A:  BCF    06.3
009B:  BCF    03.5
009C:  BCF    06.3
....................    delay_ms(velocidad); 
009D:  MOVF   21,W
009E:  MOVWF  22
009F:  CALL   017
....................     
....................    output_low(bobina_1); 
00A0:  BSF    03.5
00A1:  BCF    06.0
00A2:  BCF    03.5
00A3:  BCF    06.0
....................    output_low(bobina_2); 
00A4:  BSF    03.5
00A5:  BCF    06.1
00A6:  BCF    03.5
00A7:  BCF    06.1
....................    output_high(bobina_3); 
00A8:  BSF    03.5
00A9:  BCF    06.2
00AA:  BCF    03.5
00AB:  BSF    06.2
....................    output_high(bobina_4); 
00AC:  BSF    03.5
00AD:  BCF    06.3
00AE:  BCF    03.5
00AF:  BSF    06.3
....................    delay_ms(velocidad); 
00B0:  MOVF   21,W
00B1:  MOVWF  22
00B2:  CALL   017
....................     
....................    output_high(bobina_1); 
00B3:  BSF    03.5
00B4:  BCF    06.0
00B5:  BCF    03.5
00B6:  BSF    06.0
....................    output_low(bobina_2); 
00B7:  BSF    03.5
00B8:  BCF    06.1
00B9:  BCF    03.5
00BA:  BCF    06.1
....................    output_low(bobina_3); 
00BB:  BSF    03.5
00BC:  BCF    06.2
00BD:  BCF    03.5
00BE:  BCF    06.2
....................    output_high(bobina_4); 
00BF:  BSF    03.5
00C0:  BCF    06.3
00C1:  BCF    03.5
00C2:  BSF    06.3
....................    delay_ms(velocidad); 
00C3:  MOVF   21,W
00C4:  MOVWF  22
00C5:  CALL   017
00C6:  BCF    0A.3
00C7:  BCF    0A.4
00C8:  GOTO   0E6 (RETURN)
.................... } 
....................  
.................... void pasos_off(void) 
.................... { 
....................    output_low(bobina_1); 
*
0004:  BSF    03.5
0005:  BCF    06.0
0006:  BCF    03.5
0007:  BCF    06.0
....................    output_low(bobina_2); 
0008:  BSF    03.5
0009:  BCF    06.1
000A:  BCF    03.5
000B:  BCF    06.1
....................    output_low(bobina_3); 
000C:  BSF    03.5
000D:  BCF    06.2
000E:  BCF    03.5
000F:  BCF    06.2
....................    output_low(bobina_4); 
0010:  BSF    03.5
0011:  BCF    06.3
0012:  BCF    03.5
0013:  BCF    06.3
0014:  BCF    0A.3
0015:  BCF    0A.4
0016:  GOTO   0D6 (RETURN)
.................... } 

Configuration Fuses:
   Word  1: 3F7A   HS NOWDT NOPUT BROWNOUT NOLVP NOCPD NOWRT NODEBUG NOPROTECT
